name: Pokemon-Ulitmate-Battle
on: push
jobs:
  tests-backend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./packages/backend
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Copy repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm dependencies
        run: npm ci

      - name: Build app
        run: npm run build-app

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Run e2e tests
        run: npm run test:e2e

  deploy-backend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./packages/backend
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - name: Copy repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm dependencies
        run: npm ci

      - name: Build app
        run: npm run build-app

      - name: Deploy backend
        run: |
          git config --global user.email "l.vandenbossche.jouvet@gmail.com"
          git config --global user.name "Lo√Øc Vanden Bossche"
          npx rimraf heroku && mkdir heroku && cp package.json heroku/ && cp -r dist heroku/ && cd heroku
          git init
          git remote add heroku "https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/pokemon-ultimate-battle.git"
          git add . && git commit -m "Deploy"
          git push --force heroku master

  tests-frontend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./packages/frontend
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - name: Copy repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm dependencies
        run: npm ci

      - name: Run build test
        run: npm run build

      - name: Lint code
        run: npm run lint

      - name: Run jasmine tests
        run: npm run test:headless

  deploy-frontend:
    runs-on: ubuntu-20.04
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    defaults:
      run:
        working-directory: ./packages/frontend
    strategy:
      matrix:
        node-version: [ 14.x ]

    steps:
      - name: Copy repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install npm dependencies
        run: npm ci

      - name: Deploy frontend
        run: npm run deploy
